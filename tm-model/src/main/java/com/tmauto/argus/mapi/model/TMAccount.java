// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: account.proto at 8:1
package com.tmauto.argus.mapi.model;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class TMAccount extends Message<TMAccount, TMAccount.Builder> {
  public static final ProtoAdapter<TMAccount> ADAPTER = new ProtoAdapter_TMAccount();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_TOKEN = "";

  @WireField(
      tag = 1,
      adapter = "com.tmauto.argus.mapi.model.TMRespStatus#ADAPTER",
      label = WireField.Label.REQUIRED
  )
  public final TMRespStatus status;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String token;

  @WireField(
      tag = 3,
      adapter = "com.tmauto.argus.mapi.model.TMProfile#ADAPTER"
  )
  public final TMProfile profile;

  public TMAccount(TMRespStatus status, String token, TMProfile profile) {
    this(status, token, profile, ByteString.EMPTY);
  }

  public TMAccount(TMRespStatus status, String token, TMProfile profile, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.status = status;
    this.token = token;
    this.profile = profile;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.status = status;
    builder.token = token;
    builder.profile = profile;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TMAccount)) return false;
    TMAccount o = (TMAccount) other;
    return unknownFields().equals(o.unknownFields())
        && status.equals(o.status)
        && Internal.equals(token, o.token)
        && Internal.equals(profile, o.profile);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + status.hashCode();
      result = result * 37 + (token != null ? token.hashCode() : 0);
      result = result * 37 + (profile != null ? profile.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", status=").append(status);
    if (token != null) builder.append(", token=").append(token);
    if (profile != null) builder.append(", profile=").append(profile);
    return builder.replace(0, 2, "TMAccount{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<TMAccount, Builder> {
    public TMRespStatus status;

    public String token;

    public TMProfile profile;

    public Builder() {
    }

    public Builder status(TMRespStatus status) {
      this.status = status;
      return this;
    }

    public Builder token(String token) {
      this.token = token;
      return this;
    }

    public Builder profile(TMProfile profile) {
      this.profile = profile;
      return this;
    }

    @Override
    public TMAccount build() {
      if (status == null) {
        throw Internal.missingRequiredFields(status, "status");
      }
      return new TMAccount(status, token, profile, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_TMAccount extends ProtoAdapter<TMAccount> {
    ProtoAdapter_TMAccount() {
      super(FieldEncoding.LENGTH_DELIMITED, TMAccount.class);
    }

    @Override
    public int encodedSize(TMAccount value) {
      return TMRespStatus.ADAPTER.encodedSizeWithTag(1, value.status)
          + (value.token != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.token) : 0)
          + (value.profile != null ? TMProfile.ADAPTER.encodedSizeWithTag(3, value.profile) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, TMAccount value) throws IOException {
      TMRespStatus.ADAPTER.encodeWithTag(writer, 1, value.status);
      if (value.token != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.token);
      if (value.profile != null) TMProfile.ADAPTER.encodeWithTag(writer, 3, value.profile);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public TMAccount decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.status(TMRespStatus.ADAPTER.decode(reader)); break;
          case 2: builder.token(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.profile(TMProfile.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public TMAccount redact(TMAccount value) {
      Builder builder = value.newBuilder();
      builder.status = TMRespStatus.ADAPTER.redact(builder.status);
      if (builder.profile != null) builder.profile = TMProfile.ADAPTER.redact(builder.profile);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
